replicaCount: 1

image:
  repository: aidanwallace/kubernetes-dashboard-token-api
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: "dashboard-token-api"
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: token-generator.kubernetes.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

rbac:
  enabled: true
  serviceAccount:
    name: "admin-user"
    namespace: "kubernetes-dashboard"
    annotations: {}
  clusterRoleBinding:
    name: "kubernetes-dashboard-admin"
    roleRef:
      name: "cluster-admin"
    subjects:
      serviceAccount:
        name: "admin-user"
        namespace: "kubernetes-dashboard"
